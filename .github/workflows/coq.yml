name: CI (Coq)

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        COQ_VERSION: ["dev-native", "8.19-native", "8.18-native", "8.17-native", "8.16-native", "8.15", "8.14", "8.13", "8.12", "8.11"]

    concurrency:
      group: ${{ github.workflow }}-${{ matrix.COQ_VERSION }}-${{ github.head_ref || ( github.ref == 'refs/heads/master' && github.run_id ) || github.ref }}
      cancel-in-progress: true

    name: docker-${{ matrix.COQ_VERSION }}

    steps:
    - uses: actions/checkout@v2
    - name: echo build params (host)
      run: |
        echo "::group::lscpu"
        lscpu
        echo "::endgroup::"
        echo "::group::uname -a"
        uname -a
        echo "::endgroup::"
        echo "::group::lsb_release -a"
        lsb_release -a
        echo "::endgroup::"
        echo "::group::etc/machine.sh"
        etc/machine.sh
        echo "::endgroup::"
    -  name: echo build params (container)
       uses: coq-community/docker-coq-action@v1
       with:
        coq_version: ${{ matrix.COQ_VERSION }}
        ocaml_version: default
        custom_script: |
          startGroup "lscpu"
          lscpu
          endGroup
          startGroup "uname -a"
          uname -a
          endGroup
          startGroup "etc/machine.sh"
          etc/machine.sh
          endGroup
          startGroup "ocamlc -config"
          ocamlc -config
          endGroup
          startGroup "coqc --config"
          coqc --config
          endGroup
          startGroup "coqc --version"
          coqc --version
          endGroup
          startGroup "echo | coqtop"
          true | coqtop
          endGroup
          sudo chmod -R a=u .
          # Work around https://github.com/actions/checkout/issues/766
          git config --global --add safe.directory "*"
    - name: make coq
      uses: coq-community/docker-coq-action@v1
      with:
        coq_version: ${{ matrix.COQ_VERSION }}
        ocaml_version: default
        custom_script: |
          git config --global --add safe.directory '*'
          make coq
    - name: make coq-perf-Sanity
      uses: coq-community/docker-coq-action@v1
      with:
        coq_version: ${{ matrix.COQ_VERSION }}
        ocaml_version: default
        custom_script: |
          git config --global --add safe.directory '*'
          make coq-perf-Sanity
    - name: sudo make coq-install
      uses: coq-community/docker-coq-action@v1
      with:
        coq_version: ${{ matrix.COQ_VERSION }}
        ocaml_version: default
        custom_script: |
          git config --global --add safe.directory '*'
          sudo make coq-install
    - name: sudo make coq-install-perf-Sanity
      uses: coq-community/docker-coq-action@v1
      with:
        coq_version: ${{ matrix.COQ_VERSION }}
        ocaml_version: default
        custom_script: |
          git config --global --add safe.directory '*'
          sudo make coq-install-perf-Sanity

  docker-check-all:
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
    - run: echo 'build passed'
      if: ${{ needs.build.result == 'success' }}
    - run: echo 'build failed' && false
      if: ${{ needs.build.result != 'success' }}
